{"version":3,"sources":["Names.js","Details.js","App.js","reportWebVitals.js","index.js"],"names":["Names","swCaracters","map","e","to","encodeURI","name","Details","height","eye_color","films","vehicles","useState","vehicleList","setVehicleList","filmList","setFilmList","useEffect","filmsPromises","fetch","then","response","json","data","Promise","all","dta","vehiclesPromises","console","log","length","title","App","setSwCaracters","promises","results","splice","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28a36666.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Names = ({ swCaracters }) => {\n  return (\n    <ul>\n      {swCaracters.map((e) => (\n        <li key={e.name}>\n          {\" \"}\n          <Link to={`/${encodeURI(e.name)}`}>{e.name}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Details = ({ name, height, eye_color, films, vehicles }) => {\n  const [vehicleList, setVehicleList] = useState([]);\n  const [filmList, setFilmList] = useState([]);\n  useEffect(() => {\n    const filmsPromises = films.map((e) =>\n      fetch(e)\n        .then((response) => response.json())\n        .then((data) => data)\n    );\n    Promise.all(filmsPromises).then((dta) => setFilmList(dta));\n\n    const vehiclesPromises = vehicles.map((e) =>\n      fetch(e)\n        .then((response) => response.json())\n        \n    );\n    Promise.all(vehiclesPromises).then((dta) => setVehicleList(dta));\n  }, []);\n  console.log(filmList);\n  return (\n    <ul>\n      {name.length > 0 && <li>{`Nombre: ${name}`}</li>}\n      {height.length > 0 && <li>{`Estatura: ${height}`}</li>}\n      {eye_color.length > 0 && <li>{`Estatura: ${eye_color}`}</li>}\n      {films.length > 0 && (\n        <li>\n          <ul>\n            Películas:\n            {filmList.map((e) => (\n              <li>\n                <Link to={`/${encodeURI(e.title)}`}>{e.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n      )}\n      {vehicles.length > 0 && (\n        <li>\n          <ul>\n            Vehículos:\n            {vehicleList.map((e) => (\n              <li>\n                <Link to={`/${encodeURI(e.name)}`}>{e.name}</Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n      )}\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Names } from \"./Names\";\nimport { Details } from \"./Details\";\nfunction App() {\n  const [swCaracters, setSwCaracters] = useState([]);\n  useEffect(() => {\n    const promises = [\n      fetch(\"https://swapi.dev/api/people/\")\n        .then((response) => response.json())\n        .then((data) => {\n          return data.results;\n        }),\n\n      fetch(\"https://swapi.dev/api/people/?page=2\")\n        .then((response) => response.json())\n        .then((data) => data.results),\n    ];\n    Promise.all(promises).then((dta) => {\n      setSwCaracters([...dta[0], ...dta[1].splice(0, 5)]);\n    });\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Names swCaracters={swCaracters} />} />\n        {swCaracters.map((e) => (\n          <Route\n            key={e.name}\n            path={`/${encodeURI(e.name)}`}\n            element={<Details {...e} />}\n          />\n        ))}\n        <Route path=\"*\" element={<h1>Not yet :c</h1>} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}